{"version":3,"file":"index.CVF_iHrE.js","sources":["../../../src/view/Drag/components/NestedFunction.vue","../../../src/view/Drag/components/RightMain.vue","../../../src/view/Drag/components/LeftMenu.vue","../../../src/view/Drag/index.vue"],"sourcesContent":["<template>\n  <ul class=\"drag-area\" ref=\"el\">\n    <li v-for=\"el in modelValue\" :key=\"el.name\">\n      <p>{{ el.name }}</p>\n      <NestedFunction v-model=\"el.children\" :groupName=\"groupName\" />\n    </li>\n  </ul>\n</template>\n<script setup lang=\"ts\">\nimport { useDraggable, VueDraggable } from 'vue-draggable-plus'\nimport { computed, useTemplateRef } from 'vue'\n\nexport interface IList {\n  id: string\n  name: string\n  children: IList[]\n}\n\ninterface Props {\n  modelValue: IList[]\n  /** 拖拽数据分组名称 */\n  groupName: string\n}\n\nconst { groupName, modelValue } = defineProps<Props>()\n\ninterface Emits {\n  (e: 'update:modelValue', value: IList[]): void\n}\n\nconst el = useTemplateRef('el')\n\nconst emits = defineEmits<Emits>()\nconst list = computed({\n  get: () => modelValue,\n  set: (value) => emits('update:modelValue', value)\n})\nuseDraggable(el, list, {\n  group: groupName\n})\n</script>\n<style scoped>\n.drag-area {\n  margin-bottom: 20px;\n  min-height: 350px;\n  padding: 5px;\n  outline: 1px dashed blue;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { ref, useTemplateRef, watch } from 'vue'\nimport NestedFunction from './NestedFunction.vue'\nimport { useDraggable } from 'vue-draggable-plus'\ninterface IList {\n  id: string\n  name: string\n  children: IList[]\n}\nconst { groupName } = defineProps<{\n  /** 拖拽数据分组名称 */\n  groupName: string\n}>()\nconst rightRef = useTemplateRef('rightRef')\n\nconst treeList = ref<IList[]>([])\n\nuseDraggable(rightRef, treeList, {\n  animation: 150,\n  group: 'people'\n  // ,onUpdate: () => {\n  //   console.log('update list1')\n  // },\n  // onAdd: () => {\n  //   console.log('add list1')\n  // },\n  // onRemove: () => {\n  //   console.log('remove list1')\n  // }\n})\n\nwatch(\n  () => treeList.value,\n  () => {\n    console.log('treeList.value--->', treeList.value)\n  },\n  {\n    deep: true\n  }\n)\n</script>\n\n<template>\n  <div class=\"right-main\" ref=\"rightRef\">\n    <NestedFunction v-model=\"treeList\" :groupName=\"groupName\" />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.right-main {\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n}\n</style>\n","<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { useDraggable } from 'vue-draggable-plus'\nimport { IList } from './NestedFunction.vue'\n\nconst { list: propsList = [], groupName } = defineProps<{\n  /** 拖拽数据列表 */\n  list: IList[]\n  /** 拖拽数据分组名称 */\n  groupName: string\n}>()\nconst el = ref()\nconst list = computed(() => {\n  return propsList\n})\nuseDraggable(el, list, {\n  animation: 150,\n  ghostClass: 'ghost',\n  group: { name: groupName, pull: 'clone', put: true },\n  onStart() {\n    console.log('start')\n  },\n  onUpdate() {\n    console.log('update')\n  }\n})\n</script>\n\n<template>\n  <div class=\"left-menu\">\n    <div class=\"box\">\n      <div class=\"flex flex-col gap-2 p-4 w-300px h-300px m-auto bg-gray-500/5 rounded\" ref=\"el\">\n        <div v-for=\"item in list\" :key=\"item.id\" class=\"h-30 bg-gray-500/5 rounded p-3 cursor-move\">\n          {{ item.name }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.ghost {\n  opacity: 0.5;\n  background: #c8ebfb;\n}\n.left-menu {\n  width: 100%;\n  height: 100%;\n  .box {\n    width: 200px;\n    min-height: 400px;\n  }\n}\n</style>\n","<!-- ParentComponent.vue -->\n<template>\n  <div class=\"drag-container\">\n    <div class=\"left\">\n      <LeftMenu :list=\"list\" groupName=\"group\" />\n    </div>\n    <div class=\"right\">\n      <RightMain groupName=\"group\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport RightMain from './components/RightMain.vue'\nimport LeftMenu from './components/LeftMenu.vue'\nimport { IList } from './components/NestedFunction.vue'\n\nconst list = ref<IList[]>([\n  {\n    name: 'Joao',\n    id: '1',\n    children: []\n  },\n  {\n    name: 'Jean',\n    id: '2',\n    children: []\n  },\n  {\n    name: 'Johanna',\n    id: '3',\n    children: []\n  },\n  {\n    name: 'Juan',\n    id: '4',\n    children: []\n  }\n])\n</script>\n\n<style scoped>\n.drag-container {\n  display: flex;\n  justify-content: space-between;\n  height: 100%;\n  gap: 15px;\n  background-color: #f1f5f9;\n  .left {\n    width: 300px;\n    height: 100%;\n    background-color: #fff;\n  }\n  .right {\n    flex: 1;\n    height: 100%;\n    background-color: #fff;\n  }\n}\n</style>\n"],"names":["el","useTemplateRef","emits","__emit","list","computed","__props","value","useDraggable","rightRef","treeList","ref","watch"],"mappings":"w7BA8BM,MAAAA,EAAKC,EAAe,IAAI,EAExBC,EAAQC,EACRC,EAAOC,EAAS,CACpB,IAAK,IAAMC,EAAU,WACrB,IAAMC,GAAUL,EAAM,oBAAqBK,CAAK,CAAA,CACjD,EACDC,OAAAA,EAAaR,EAAII,EAAM,CACrB,MAAOE,EAAA,SAAA,CACR,2bC1BK,MAAAG,EAAWR,EAAe,UAAU,EAEpCS,EAAWC,EAAa,EAAE,EAEhCH,OAAAA,EAAaC,EAAUC,EAAU,CAC/B,UAAW,IACX,MAAO,QAAA,CAUR,EAEDE,EACE,IAAMF,EAAS,MACf,IAAM,CACI,QAAA,IAAI,qBAAsBA,EAAS,KAAK,CAClD,EACA,CACE,KAAM,EAAA,CAEV,2WC5BA,MAAMV,EAAKW,EAAI,EACTP,EAAOC,EAAS,IACbC,EAAA,IACR,EACDE,OAAAA,EAAaR,EAAII,EAAM,CACrB,UAAW,IACX,WAAY,QACZ,MAAO,CAAE,KAAME,YAAW,KAAM,QAAS,IAAK,EAAK,EACnD,SAAU,CACR,QAAQ,IAAI,OAAO,CACrB,EACA,UAAW,CACT,QAAQ,IAAI,QAAQ,CAAA,CACtB,CACD,8ZCPD,MAAMF,EAAOO,EAAa,CACxB,CACE,KAAM,OACN,GAAI,IACJ,SAAU,CAAA,CACZ,EACA,CACE,KAAM,OACN,GAAI,IACJ,SAAU,CAAA,CACZ,EACA,CACE,KAAM,UACN,GAAI,IACJ,SAAU,CAAA,CACZ,EACA,CACE,KAAM,OACN,GAAI,IACJ,SAAU,CAAA,CAAC,CACb,CACD"}